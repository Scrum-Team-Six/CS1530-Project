<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Travel Budget Pro</title>
  <link rel="stylesheet" href="styles.css">
  <!-- Include Handsontable CSS -->
  <link href="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.css" rel="stylesheet">
</head>

<body>
  <header>
    <div class="welcome-message">
      <h2>Welcome, <%= firstName %></h2> <!-- Dynamic greeting: This is not a bug! -->
    </div>
    <div class="logout-button">
      <a href="/login">
          <button id="logout-button">Logout</button>
      </a>
    </div>
    <div class="header-text-container"> <!-- Text container for independent positioning -->
      <h1>Travel Budget Pro</h1>
      <p>Stay up-to-date on your travel expenses</p>
    </div>
  </header>

  <div id="display" class="display">
    <nav id="sidebar">
      <h2>Menu</h2>
      <ul>
        <li><a href="/home">Home</a></li>
        <li><cur>Create Budget</cur></li> 
        <li><a href="/createReport">Create Report</a></li>
        <li><a href="/settings">Edit Settings</a></li>
      </ul>
    </nav>
  
    <div class="content">
      <form id="save-budget-form" action="/createBudget" method="post">
        <!-- Hidden input field to store spreadsheet data for index.js to find-->
        <input type="hidden" id="budget-data" name="budgetData">
        <button id="save-budget-btn" type="submit" style="margin-bottom: 10px;">Save Budget</button>
      </form>
      <button id="add-row-button">Add Expense</button> 
      <button id="delete-row-button">Delete Last Expense</button>
      <!-- Handsontable grid will be inserted here -->
      <div id="handsontable-container"></div>
    </div>
  </div>

  <footer>
    &copy; 2024 Travel Budget Pro
  </footer>

  <!-- Includes Handsontable -->
  <script src="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.js"></script>
  <script src="https://handsontable.com/docs/scripts/fixer.js"></script>

  <!-- Saves a spreadsheet into a hidden input field when the save button is clicked -->
  <script>
    var container = document.getElementById('handsontable-container'); // Container where spreadsheet is displayed
    var save = document.getElementById('save'); // Save button

    // Initialize the Handsontable instance
    const hot = new Handsontable(container, {
      startRows: 4,
      startCols: 5,
      manualColumnResize: true, // Enable manual column resizing
      manualRowResize: true, // Enable manual row resizing
      rowHeaders: true,
      colHeaders: ['Expense Category', 'Currency', 'Cost', 'Description'],
      colWidths: [150, 150, 150, 150],
      height: 'auto',
      licenseKey: 'non-commercial-and-evaluation',
      columns: [
        // Expense Category settings
        {
          data: 'expenseCategory',
          type: 'autocomplete',
          source: [
            "",
            "Food",
            "Transportation",
            "Entertainment",
            "Lodging",
          ],
          strict: false,
        },
        // Currency settings
        {
          data: 'Currency',
          type: 'dropdown',
          source: [
            "",
            "USD - United States Dollar",
            "EUR - Euro",
            "GBP - British Pound",
            "JPY - Japanese Yen",
            "CNY - Chinese Yuan",
            "INR - Indian Rupee",
            "AUD - Australian Dollar",
            "CAD - Canadian Dollar",
            "SGD - Singapore Dollar",
            "CHF - Swiss Franc",
            "MYR - Malaysian Ringgit",
            "NZD - New Zealand Dollar",
            "THB - Thai Baht",
            "RUB - Russian Ruble",
            "ZAR - South African Rand",
            "BRL - Brazilian Real",
            "PHP - Philippine Peso",
            "IDR - Indonesian Rupiah",
            "TRY - Turkish Lira",
            "KRW - South Korean Won",
            "MXN - Mexican Peso",
            "NOK - Norwegian Krone",
          ],
          strict: true,
          allowInvalid: false,
        },
        // Cost settings
        {
          data: 'cost',
          type: 'numeric',
        },
        // Description settings
        {}
      ],
    });

    // Add event listener to the save button form submission
    document.getElementById('save-budget-form').addEventListener('submit', function (event) {
      // Store data in variables by columns
      var col1 = hot.getDataAtCol(0);
      var col2 = hot.getDataAtCol(1);
      var col3 = hot.getDataAtCol(2);
      var col4 = hot.getDataAtCol(3);

      // Check if any cell is empty
      if (col1.some(cell => cell === null || cell === "") ||
        col2.some(cell => cell === null || cell === "") ||
        col3.some(cell => cell === null || cell === "") ||
        col4.some(cell => cell === null || cell === "")) {
        // Display pop-up message if any cell is empty
        alert("Please fill out all cells before saving.");
        event.preventDefault(); // Prevent form submission
      } else {
        // Store the column data
        var columnData = {
          expenseCategory: col1,
          currency: col2,
          cost: col3,
          description: col4
        };

        // Serialize the column data
        var serializedData = JSON.stringify(columnData);

        // Assign serialized data to the hidden input field
        document.getElementById('budget-data').value = serializedData;
      }
    });
  </script>

  <!-- Adds a row of cells when the "Add Expense" button is clicked. -->
  <script>
    document.getElementById('add-row-button').addEventListener('click', function (event) {
      // Get data for the last row
      var lastRowData = hot.getDataAtRow(hot.countRows() - 1);

      // Check if the last row is entirely filled in
      if (lastRowData.every(cell => cell !== null && cell !== "")) {
        // Last row is entirely filled in - insert a new row below the last row
        hot.alter('insert_row_below', hot.countRows());
      } else {
        // Display a message indicating that the user needs to fill in the last row
        alert("Please fill in the last row before adding another expense.");
      }
    });
  </script>

  <!-- Deletes the last row of cells when the "Remove Last Expense" button is clicked. -->
  <script>
    // Add event listener to the "Delete Last Row" button
    document.getElementById('delete-row-button').addEventListener('click', function (event) {
      if (hot.countRows() > 1) {
        // Delete the last row
        hot.alter('remove_row', hot.countRows() - 1);
      } else {
        // Last row in the spreadsheet - just clear the contents
        for (var i = 0; i < hot.countCols(); i++) {
          hot.setDataAtCell(hot.countRows() - 1, i, "");
        }
      }
    });
  </script>
</body>
</html>